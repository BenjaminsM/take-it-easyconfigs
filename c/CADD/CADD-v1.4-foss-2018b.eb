#
# EasyConfig for Combined Annotation Dependent Depletion (CADD).
#

easyblock = 'Tarball'

name = 'CADD'
version = 'v1.4'

homepage = 'http://cadd.gs.washington.edu/home'
description = """
Tool for scoring the deleteriousness of variants in the human genome(v1.4).
"""

#
# Don't use 'dummy' as toolchain version to make sure dependencies are loaded
# both at build as well as at runtime. With 'dummy' as toolchain version,
# dependencies will only be loaded at runtime.
#
#toolchain = {'name': 'dummy', 'version': 'dummy'}
toolchain = {'name': 'foss', 'version': '2018b'}

dependencies = [
    ('PythonPlus', '2.7.16', '-v21.08.1', ('foss', '2018b')),
    ('HTSlib', '1.16', '', ('GCCcore', '11.3.0')),
    ('SAMtools', '1.16.1', '', ('GCCcore', '11.3.0')),
    ('VEP', '107', '', ('GCC', '11.3.0')),
]

#
# Example URL: 
# http://krishna.gs.washington.edu/download/%(name)s/%(version)s/
#
source_urls = [ 
    # Only for annotations which is built on genome build GRCh37/hg19
    'https://krishna.gs.washington.edu/download/%(name)s/%(version)s/GRCh37/',
    'https://github.com/kircherlab/%(name)s-scripts/archive/',
]

sources = [
    #
    # Use arbitrary 232fc0bda9f9ed127694f1d38669db043918328e.zip from github.
    #
    {
        'filename': '232fc0bda9f9ed127694f1d38669db043918328e.zip',  
        'extract_cmd': 'unzip %s -d %(builddir)s/'
    },
]

patches = ['CADD_v1.4.patch']

checksums = [
    '00b6eaf6b861c7771decc8abcb18dd55',  # 232fc0bda9f9ed127694f1d38669db043918328e.zip
    '9e96988a0e091adfe311b38182e2e0a4',  # CADD_v1.4.patch
]

#
# Customizations for the install step.
#
bash_scripts = ['CADD.sh', 'install.sh']
python_scripts = [
    'annotateVEPvcf.py', 'appendPHREDscore.py', 'extract_scored.py', 
    'max_line_hierarchy.py', 'predictSKmodel.py', 'trackTransformation.py', 
    'VCF2vepVCF.py', 'lib/AnalysisLib.py', 'lib/Annotations.py', 
    'lib/columnInfo.py', 'lib/EDict.py', 'lib/tracks.py',
]
not_scripts = ['README.md', 'LICENSE', 'src/environment.yml']

#
# Make scripts executable and move prescored variants to prescored subdir.
#

sanity_check_paths = {
    'files': ['%s' % x for x in bash_scripts]
             + ['src/scripts/%s' % x for x in python_scripts]
             + ['%s' % x for x in not_scripts],
    'dirs': ['%s' % x for x in ['config', 'data', 'src', 'test']],
}

moduleclass = 'bio'
modextrapaths = {'PATH': ''}
modloadmsg = """

===============================================================================
USAGE: CADD.sh [-o <outfile>] [-g <genomebuild>] [-a] <infile>

E.g: 
    CADD.sh input.vcf
    CADD.sh -a -g GRCh37 -o output_inclAnno_GRCh37.tvs.gz input.vcf

NOTE: input must be a valid bgzipped (not gzipped) VCF file.
===============================================================================

"""
